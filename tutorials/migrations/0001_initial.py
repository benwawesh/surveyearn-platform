# Generated by Django 4.2.24 on 2025-09-21 22:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer_text', models.CharField(max_length=500)),
                ('is_correct', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('single_choice', 'Single Choice')], default='multiple_choice', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('points', models.PositiveIntegerField(default=1, help_text='Points awarded for correct answer')),
                ('explanation', models.TextField(blank=True, help_text='Explanation shown after answering')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['tutorial', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('video_url', models.URLField(help_text='YouTube, Vimeo, or direct video URL')),
                ('video_duration', models.DurationField(help_text='Video duration (automatically detected if possible)')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='tutorial_thumbnails/')),
                ('order', models.PositiveIntegerField(default=0)),
                ('quiz_pass_percentage', models.PositiveIntegerField(default=70, help_text='Minimum percentage needed to pass the quiz', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('max_quiz_attempts', models.PositiveIntegerField(default=3, help_text='Maximum quiz attempts allowed')),
                ('completion_reward', models.DecimalField(decimal_places=2, default=0.0, help_text='Reward amount for completing tutorial', max_digits=10)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='TutorialCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class (e.g., fas fa-video)', max_length=50)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Tutorial Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserQuizAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attempt_number', models.PositiveIntegerField()),
                ('score_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('total_questions', models.PositiveIntegerField()),
                ('correct_answers', models.PositiveIntegerField()),
                ('time_taken', models.DurationField(blank=True, null=True)),
                ('is_passed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to='tutorials.tutorial')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-completed_at'],
                'unique_together': {('user', 'tutorial', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='UserQuizAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_correct', models.BooleanField()),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutorials.quizquestion')),
                ('quiz_attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='tutorials.userquizattempt')),
                ('selected_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tutorials.quizanswer')),
            ],
        ),
        migrations.AddField(
            model_name='tutorial',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorials', to='tutorials.tutorialcategory'),
        ),
        migrations.AddField(
            model_name='tutorial',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, help_text='Tutorials that must be completed before this one', to='tutorials.tutorial'),
        ),
        migrations.AddField(
            model_name='quizquestion',
            name='tutorial',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_questions', to='tutorials.tutorial'),
        ),
        migrations.AddField(
            model_name='quizanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='tutorials.quizquestion'),
        ),
        migrations.CreateModel(
            name='UserTutorialProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_watch_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('video_completed_at', models.DateTimeField(blank=True, null=True)),
                ('quiz_attempts', models.PositiveIntegerField(default=0)),
                ('best_quiz_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quiz_passed', models.BooleanField(default=False)),
                ('quiz_completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('reward_claimed', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tutorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='tutorials.tutorial')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tutorial_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'tutorial')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='tutorial',
            unique_together={('category', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='quizquestion',
            unique_together={('tutorial', 'order')},
        ),
    ]
