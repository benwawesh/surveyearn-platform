# Generated by Django 4.2.24 on 2025-09-11 22:18

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the survey', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Survey title that users will see', max_length=200)),
                ('description', models.TextField(help_text='Description of what the survey is about')),
                ('payout', models.DecimalField(decimal_places=2, help_text='Amount paid to users for completing this survey', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('closed', 'Closed')], default='draft', help_text='Current status of the survey', max_length=10)),
                ('min_age', models.PositiveIntegerField(blank=True, help_text='Minimum age for survey participants', null=True)),
                ('max_age', models.PositiveIntegerField(blank=True, help_text='Maximum age for survey participants', null=True)),
                ('target_location', models.CharField(blank=True, help_text='Target location/region for survey', max_length=100)),
                ('max_responses', models.PositiveIntegerField(blank=True, help_text='Maximum number of responses needed (optional)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='Admin user who created this survey', on_delete=django.db.models.deletion.CASCADE, related_name='created_surveys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey',
                'verbose_name_plural': 'Surveys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the response', primary_key=True, serialize=False)),
                ('completed_at', models.DateTimeField(auto_now_add=True, help_text='When the survey was completed')),
                ('payout_amount', models.DecimalField(decimal_places=2, help_text='Amount paid for this response', max_digits=10)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of respondent', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser/device information')),
                ('survey', models.ForeignKey(help_text='Survey that was responded to', on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='surveys.survey')),
                ('user', models.ForeignKey(help_text='User who submitted this response', on_delete=django.db.models.deletion.CASCADE, related_name='survey_responses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Survey Response',
                'verbose_name_plural': 'Survey Responses',
                'ordering': ['-completed_at'],
                'unique_together': {('user', 'survey')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the question', primary_key=True, serialize=False)),
                ('question_text', models.TextField(help_text='The actual question text')),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('text', 'Text Answer'), ('rating', 'Rating Scale'), ('boolean', 'Yes/No')], default='mcq', help_text='Type of question', max_length=10)),
                ('is_required', models.BooleanField(default=True, help_text='Whether this question must be answered')),
                ('order', models.PositiveIntegerField(default=1, help_text='Order of this question in the survey')),
                ('rating_min', models.PositiveIntegerField(blank=True, default=1, help_text='Minimum rating value (for rating questions)', null=True)),
                ('rating_max', models.PositiveIntegerField(blank=True, default=5, help_text='Maximum rating value (for rating questions)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('survey', models.ForeignKey(help_text='Survey this question belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='surveys.survey')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['survey', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the choice', primary_key=True, serialize=False)),
                ('choice_text', models.CharField(help_text='Text for this choice option', max_length=200)),
                ('order', models.PositiveIntegerField(default=1, help_text='Order of this choice in the question')),
                ('question', models.ForeignKey(help_text='Question this choice belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='surveys.question')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the answer', primary_key=True, serialize=False)),
                ('text_answer', models.TextField(blank=True, help_text='Text answer (for text questions)')),
                ('rating_answer', models.PositiveIntegerField(blank=True, help_text='Rating value (for rating questions)', null=True)),
                ('boolean_answer', models.BooleanField(blank=True, help_text='Yes/No answer (for boolean questions)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('choice', models.ForeignKey(blank=True, help_text='Selected choice (for MCQ questions)', null=True, on_delete=django.db.models.deletion.CASCADE, to='surveys.choice')),
                ('question', models.ForeignKey(help_text='Question this answer is for', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.question')),
                ('response', models.ForeignKey(help_text='Survey response this answer belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='surveys.response')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['response', 'question__order'],
                'unique_together': {('response', 'question')},
            },
        ),
    ]
